- id: set_master_bedroom_heatpump_setpoint
  alias: "Set Master Bedroom Mini Split Setpoint (Heat mode)"
  description: "Adjust the mini split setpoint based on HVAC mode, time of day, and other conditions, ensuring the system operates within specified logic."
  trigger:
    - platform: state
      entity_id:
        - input_boolean.hvac_away_mode
        - input_boolean.master_bedroom_overheated_status
        - input_boolean.master_bedroom_override_status
        - input_select.hvac_mode
        - input_select.master_bedroom_heatpump_state
        - input_number.master_bedroom_override_setpoint
        - input_datetime.master_bedroom_day_start_time
        - input_datetime.master_bedroom_bedtime_start_time
        - input_datetime.master_bedroom_sleep_start_time
        - input_datetime.master_bedroom_override_until
        - input_number.master_bedroom_heatpump_supplemental_setpoint
        - input_number.master_bedroom_heatpump_overheat_setpoint
        - input_number.master_bedroom_heatpump_comfort_sleep_setpoint
        - input_number.master_bedroom_heatpump_comfort_bedtime_setpoint
        - input_number.master_bedroom_heatpump_comfort_daytime_setpoint
    - platform: time_pattern
      minutes: "/5"
  condition:
    - condition: state
      entity_id: input_select.hvac_mode
      state: "Heat"
    - condition: state
      entity_id: input_boolean.hvac_away_mode
      state: "off"
  action:
    - variables:
        current_time: "{{ now().timestamp() }}"
        day_start: >-
          {{ as_timestamp(now().strftime('%Y-%m-%d') ~ 'T' ~ 
          (states('input_datetime.master_bedroom_day_start_time') | default('07:00:00'))) }}
        bedtime_start: >-
          {{ as_timestamp(now().strftime('%Y-%m-%d') ~ 'T' ~ 
          (states('input_datetime.master_bedroom_bedtime_start_time') | default('21:00:00'))) }}
        sleep_start: >-
          {{ as_timestamp(now().strftime('%Y-%m-%d') ~ 'T' ~ 
          (states('input_datetime.master_bedroom_sleep_start_time') | default('23:00:00'))) }}
        next_day_start: >-
          {{ as_timestamp((now() + timedelta(days=1)).strftime('%Y-%m-%d') ~ 'T' ~ 
          (states('input_datetime.master_bedroom_day_start_time') | default('07:00:00'))) }}
        is_daytime: >-
          {{ day_start <= current_time < bedtime_start }}
        is_bedtime: >-
          {{ bedtime_start <= current_time < sleep_start }}
        is_sleep: >-
          {{ sleep_start <= current_time < next_day_start }}
        is_overheated: "{{ is_state('input_boolean.master_bedroom_overheated_status', 'on') }}"
        override_active: >-
          {{ is_state('input_boolean.master_bedroom_override_status', 'on') and 
          now().timestamp() < as_timestamp(states('input_datetime.master_bedroom_override_until')) }}
        heatpump_mode: "{{ states('input_select.master_bedroom_heatpump_state') }}"
    - service: logbook.log
      data:
        name: "Master Bedroom Mini Split Automation"
        message: >
          Debugging Variables:
          current_time={{ current_time }},
          day_start={{ day_start }},
          bedtime_start={{ bedtime_start }},
          sleep_start={{ sleep_start }},
          next_day_start={{ next_day_start }},
          is_daytime={{ is_daytime }},
          is_bedtime={{ is_bedtime }},
          is_sleep={{ is_sleep }},
          is_overheated={{ is_overheated }},
          override_active={{ override_active }},
          heatpump_mode={{ heatpump_mode }}
    - choose:
        # Turn Off logic
        - conditions:
            - condition: template
              value_template: "{{ heatpump_mode == 'Off' }}"
          sequence:
            - service: logbook.log
              data:
                name: "Master Bedroom Mini Split Automation"
                message: "Heat pump is Off. Turning off mini split and setting setpoint to Off."
            - service: climate.turn_off
              target:
                entity_id: climate.master_bedroom_heat_pump
            - service: input_select.select_option
              data:
                entity_id: input_select.master_bedroom_heatpump_setpoint_current
                option: "Off"
        # Ensure Heat Pump is On (Heat Mode) for Other Modes
        - conditions:
            - condition: template
              value_template: "{{ heatpump_mode != 'Off' }}"
            - condition: state
              entity_id: climate.master_bedroom_heat_pump
              state: "off"
          sequence:
            - service: logbook.log
              data:
                name: "Master Bedroom Mini Split Automation"
                message: "Heat pump is not Off but was turned off. Setting it to Heat mode."
            - service: climate.set_hvac_mode
              data:
                entity_id: climate.master_bedroom_heat_pump
                hvac_mode: "heat"
        # Override logic
        - conditions:
            - condition: template
              value_template: "{{ override_active }}"
          sequence:
            - service: logbook.log
              data:
                name: "Master Bedroom Mini Split Automation"
                message: "Override active. Setting mini split to override setpoint."
            - service: input_select.select_option
              data:
                entity_id: input_select.master_bedroom_heatpump_setpoint_current
                option: "Override"
        # Supplemental mode
        - conditions:
            - condition: template
              value_template: "{{ heatpump_mode == 'Supplement' }}"
          sequence:
            - service: logbook.log
              data:
                name: "Master Bedroom Mini Split Automation"
                message: "Supplemental mode detected. Setting mini split to supplemental setpoint."
            - service: input_select.select_option
              data:
                entity_id: input_select.master_bedroom_heatpump_setpoint_current
                option: "Supplemental"
        # Overheating logic
        - conditions:
            - condition: template
              value_template: "{{ is_overheated }}"
          sequence:
            - service: logbook.log
              data:
                name: "Master Bedroom Mini Split Automation"
                message: "Overheating detected. Setting mini split to overheated setpoint."
            - service: input_select.select_option
              data:
                entity_id: input_select.master_bedroom_heatpump_setpoint_current
                option: "Overheated"
        # Daytime logic
        - conditions:
            - condition: template
              value_template: "{{ is_daytime }}"
          sequence:
            - service: logbook.log
              data:
                name: "Master Bedroom Mini Split Automation"
                message: "Daytime detected. Setting mini split to daytime setpoint."
            - service: input_select.select_option
              data:
                entity_id: input_select.master_bedroom_heatpump_setpoint_current
                option: "Daytime"
        # Bedtime logic
        - conditions:
            - condition: template
              value_template: "{{ is_bedtime }}"
          sequence:
            - service: logbook.log
              data:
                name: "Master Bedroom Mini Split Automation"
                message: "Bedtime detected. Setting mini split to bedtime setpoint."
            - service: input_select.select_option
              data:
                entity_id: input_select.master_bedroom_heatpump_setpoint_current
                option: "Bedtime"
        # Sleep logic
        - conditions:
            - condition: template
              value_template: "{{ is_sleep }}"
          sequence:
            - service: logbook.log
              data:
                name: "Master Bedroom Mini Split Automation"
                message: "Sleep time detected. Setting mini split to sleep setpoint."
            - service: input_select.select_option
              data:
                entity_id: input_select.master_bedroom_heatpump_setpoint_current
                option: "Sleep"
  mode: single

- id: update_master_bedroom_heatpump_temperature
  alias: "Update Master Bedroom Mini Split Temperature (Heat mode)"
  description: "Ensure mini split is on and adjust temperature when the setpoint changes, only if necessary."
  trigger:
    - platform: state
      entity_id:
        - input_select.master_bedroom_heatpump_setpoint_current
        - input_number.master_bedroom_heatpump_supplemental_setpoint
        - input_number.master_bedroom_heatpump_overheat_setpoint
        - input_number.master_bedroom_heatpump_comfort_sleep_setpoint
        - input_number.master_bedroom_heatpump_comfort_bedtime_setpoint
        - input_number.master_bedroom_heatpump_comfort_daytime_setpoint
        - input_boolean.master_bedroom_override_status
        - input_number.master_bedroom_override_setpoint
        - input_datetime.master_bedroom_day_start_time
        - input_datetime.master_bedroom_bedtime_start_time
        - input_datetime.master_bedroom_sleep_start_time
        - input_datetime.master_bedroom_override_until
    - platform: time_pattern
      minutes: "/5"
  condition:
    - condition: state
      entity_id: input_select.hvac_mode
      state: "Heat"
    - condition: state
      entity_id: input_boolean.hvac_away_mode
      state: "off"
  action:
    - service: logbook.log
      data:
        name: "Master Bedroom Mini Split Automation Triggered"
        message: >
          Automation triggered. Triggered by {{ trigger.platform }} on 
          {{ trigger.entity_id }} with value {{ trigger.to_state.state }}.
    - variables:
        current_setpoint: "{{ states('input_select.master_bedroom_heatpump_setpoint_current') }}"
        override_setpoint: "{{ states('input_number.master_bedroom_override_setpoint') | float(0) }}"
        supplemental_setpoint: "{{ states('input_number.master_bedroom_heatpump_supplemental_setpoint') | float(0) }}"
        overheat_setpoint: "{{ states('input_number.master_bedroom_heatpump_overheat_setpoint') | float(0) }}"
        sleep_setpoint: "{{ states('input_number.master_bedroom_heatpump_comfort_sleep_setpoint') | float(0) }}"
        bedtime_setpoint: "{{ states('input_number.master_bedroom_heatpump_comfort_bedtime_setpoint') | float(0) }}"
        daytime_setpoint: "{{ states('input_number.master_bedroom_heatpump_comfort_daytime_setpoint') | float(0) }}"
        thermostat_temperature: "{{ state_attr('climate.master_bedroom_heat_pump', 'temperature') | float(0) }}"
        raw_new_temperature: >-
          {% if current_setpoint == 'Override' %}
            {{ override_setpoint }}
          {% elif current_setpoint == 'Supplemental' %}
            {{ supplemental_setpoint }}
          {% elif current_setpoint == 'Overheated' %}
            {{ overheat_setpoint }}
          {% elif current_setpoint == 'Sleep' %}
            {{ sleep_setpoint }}
          {% elif current_setpoint == 'Bedtime' %}
            {{ bedtime_setpoint }}
          {% elif current_setpoint == 'Daytime' %}
            {{ daytime_setpoint }}
          {% else %}
            {{ thermostat_temperature }}  # Default to the current thermostat temperature
          {% endif %}
        new_temperature: "{{ max(raw_new_temperature, 64.4) }}"
    - choose:
        # Check if the mini split is off and turn it on if necessary
        - conditions:
            - condition: state
              entity_id: climate.master_bedroom_heat_pump
              state: "off"
          sequence:
            - service: climate.turn_on
              target:
                entity_id: climate.master_bedroom_heat_pump
            - service: logbook.log
              data:
                name: "Master Bedroom Mini Split Setpoint Automation"
                message: >
                  Mini split was off and has been turned on.
    - choose:
        # Check if the temperature needs updating
        - conditions:
            - condition: template
              value_template: "{{ thermostat_temperature != new_temperature }}"
          sequence:
            - service: climate.set_temperature
              data:
                entity_id: climate.master_bedroom_heat_pump
                temperature: "{{ new_temperature }}"
            - service: logbook.log
              data:
                name: "Master Bedroom Mini Split Setpoint Automation"
                message: >
                  Temperature updated to {{ new_temperature }}° 
                  from {{ thermostat_temperature }}°. 
                  Setpoint: {{ current_setpoint }}.
      default:
        - service: logbook.log
          data:
            name: "Master Bedroom Mini Split Setpoint Automation"
            message: >
              No temperature change required. 
              Current: {{ thermostat_temperature }}°. 
              Desired: {{ new_temperature }}°.