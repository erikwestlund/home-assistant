- name: "Is Holiday Debug"
  unique_id: is_holiday_debug
  state: >
    {% set today = now().date() %}
    
    {% set new_years_day = now().replace(month=1, day=1).date() %}
    {% set independence_day = now().replace(month=7, day=4).date() %}
    {% set juneteenth = now().replace(month=6, day=19).date() %}
    {% set veterans_day = now().replace(month=11, day=11).date() %}
    
    {% set january_first = now().replace(month=1, day=1) %}
    {% set mlk_day = (january_first + timedelta(days=(0 - january_first.weekday()) + 14)).date() %}
    
    {% set may_last_day = now().replace(month=5, day=31) %}
    {% set memorial_day = (may_last_day - timedelta(days=may_last_day.weekday())).date() %}
    
    {% set september_first = now().replace(month=9, day=1) %}
    {% set labor_day = (september_first + timedelta(days=(0 - september_first.weekday()))).date() %}
    
    {% set november_first = now().replace(month=11, day=1) %}
    {% set thanksgiving = (november_first + timedelta(days=(3 - november_first.weekday()) + 21)).date() %}
    {% set november_holidays = [
      (thanksgiving - timedelta(days=1)).date(),
      thanksgiving,
      (thanksgiving + timedelta(days=1)).date()
    ] %}
    
    {% set december_holidays = [
      (now().replace(month=12, day=d).date()) for d in range(23, 32)
    ] %}
    
    {% set holidays = [
      new_years_day,
      independence_day,
      juneteenth,
      veterans_day,
      mlk_day,
      memorial_day,
      labor_day
    ] + november_holidays + december_holidays %}
    
    {{ today in holidays }}

- name: "Is Holiday"
  unique_id: is_holiday
  state: >
    {% set today = now().date() %}
    {% set holidays = [
      now().replace(month=12, day=25).date(),
      now().replace(month=1, day=1).date(),
      now().replace(month=7, day=4).date()
    ] %}
    {{ today in holidays }}
    
    

- name: "Is Weekend"
  unique_id: is_weekend
  state: >
    {% set today = now().weekday() %}
    {% set is_regular_weekend = today in [5, 6] %}
    {{ is_regular_weekend or is_state('binary_sensor.is_holiday', 'on') }}

- name: "Is Weekday"
  unique_id: is_weekday
  state: >
    {{ not is_state('binary_sensor.is_weekend', 'on') }}