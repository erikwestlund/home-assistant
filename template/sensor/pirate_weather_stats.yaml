- name: "Current Temperature"
  unique_id: current_temperature
  unit_of_measurement: "°F"
  state: >
    {{ state_attr('sensor.pirate_weather', 'currently')['temperature'] | round(1) if state_attr('sensor.pirate_weather', 'currently') else 'unavailable' }}
  icon: mdi:thermometer

- name: "Daily High Temperature"
  unique_id: daily_high_temperature
  unit_of_measurement: "°F"
  state: >
    {% set daily = state_attr('sensor.pirate_weather', 'daily') %}
    {{ daily['data'][0]['temperatureHigh'] | round(1) if daily and daily['data'] | length > 0 and daily['data'][0]['temperatureHigh'] is not none else 'unavailable' }}
  icon: mdi:thermometer-chevron-up

- name: "Daily Low Temperature"
  unique_id: daily_low_temperature
  unit_of_measurement: "°F"
  state: >
    {% set daily = state_attr('sensor.pirate_weather', 'daily') %}
    {{ daily['data'][0]['temperatureLow'] | round(1) if daily and daily['data'] | length > 0 and daily['data'][0]['temperatureLow'] is not none else 'unavailable' }}
  icon: mdi:thermometer-chevron-down


# daytime broke


# Nighttime High Temperature
- name: "Nighttime High Temperature"
  unique_id: nighttime_high_temperature
  unit_of_measurement: "°F"
  state: >
    {% set forecast = state_attr('sensor.pirate_weather', 'hourly') %}
    {% if forecast and forecast['data'] %}
      {% set night_start = now().replace(hour=19, minute=0, second=0, microsecond=0).timestamp() %}
      {% set night_end = (now() + timedelta(days=1)).replace(hour=7, minute=0, second=0, microsecond=0).timestamp() %}
      {% set nighttime_temps = forecast['data'] | selectattr('time', '>=', night_start) | selectattr('time', '<=', night_end) | map(attribute='temperature') | list %}
      {{ nighttime_temps | max | round(1) if nighttime_temps | length > 0 else 'unavailable' }}
    {% else %}
      unavailable
    {% endif %}
  icon: mdi:moon-waxing-crescent

# Nighttime Low Temperature
- name: "Nighttime Low Temperature"
  unique_id: nighttime_low_temperature
  unit_of_measurement: "°F"
  state: >
    {% set forecast = state_attr('sensor.pirate_weather', 'hourly') %}
    {% if forecast and forecast['data'] %}
      {% set night_start = now().replace(hour=19, minute=0, second=0, microsecond=0).timestamp() %}
      {% set night_end = (now() + timedelta(days=1)).replace(hour=7, minute=0, second=0, microsecond=0).timestamp() %}
      {% set nighttime_temps = forecast['data'] | selectattr('time', '>=', night_start) | selectattr('time', '<=', night_end) | map(attribute='temperature') | list %}
      {{ nighttime_temps | min | round(1) if nighttime_temps | length > 0 else 'unavailable' }}
    {% else %}
      unavailable
    {% endif %}
  icon: mdi:weather-night

# Nighttime Average Temperature
- name: "Nighttime Average Temperature"
  unique_id: nighttime_average_temperature
  unit_of_measurement: "°F"
  state: >
    {% set forecast = state_attr('sensor.pirate_weather', 'hourly') %}
    {% if forecast and forecast['data'] %}
      {% set night_start = now().replace(hour=19, minute=0, second=0, microsecond=0).timestamp() %}
      {% set night_end = (now() + timedelta(days=1)).replace(hour=7, minute=0, second=0, microsecond=0).timestamp() %}
      {% set nighttime_temps = forecast['data'] | selectattr('time', '>=', night_start) | selectattr('time', '<=', night_end) | map(attribute='temperature') | list %}
      {{ (nighttime_temps | sum / nighttime_temps | length) | round(1) if nighttime_temps | length > 0 else 'unavailable' }}
    {% else %}
      unavailable
    {% endif %}
  icon: mdi:thermometer-lines